[{"id":"9a2110eb.26904","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"67ca144a.4bd7cc","type":"mqtt-broker","z":"","name":"","broker":"mqtt://localhost:1883","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"cb53bf8c.a21c9","type":"uuid","z":"9a2110eb.26904","uuidVersion":"v4","namespaceType":"","namespace":"","namespaceCustom":"","name":"uuid","field":"payload","fieldType":"msg","x":190,"y":260,"wires":[["c00c5d5d.22f0b"]]},{"id":"9dbb89d7.cf77b8","type":"inject","z":"9a2110eb.26904","name":"Interval Trigger","topic":"","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"onceDelay":"","x":140,"y":200,"wires":[["4eb5ebe7.cce4a4"]]},{"id":"2d5c6246.35270e","type":"split","z":"9a2110eb.26904","name":"Split Devices to Msgs","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":520,"y":200,"wires":[["cb53bf8c.a21c9","77f40d43.7c2444"]],"icon":"node-red/switch.png"},{"id":"1ef52fa6.790a1","type":"function","z":"9a2110eb.26904","name":"Define Devices","func":"const COMPANY = \"Acme Corp.\"\n\nconst DEVICES = [\n    {\n      deviceName:\"dummy-temp-1\",\n      deviceType:\"temperature\",\n      units: \"fahrenheit\",\n      lat: 30.5,\n      lng: 95.9\n    },\n    \n    {\n      deviceName:\"dummy-temp-2\",\n      deviceType:\"temperature\",\n      units: \"fahrenheit\",\n      lat: 31.1,\n      lng: 96.5\n    },\n    \n    {\n      deviceName:\"dummy-temp-3\",\n      deviceType:\"temperature\",\n      units: \"fahrenheit\",\n      lat: 29.1,\n      lng: 94.7\n    }\n]\n\ncontext.flow.set(\"company\",COMPANY)\n\ncontext.flow.set(\"devices\", DEVICES)\n\ncontext.flow.set('numDevices',DEVICES.length)\n\ncontext.flow.set(\"previousData\",[...new Array(DEVICES.length)])","outputs":1,"noerr":0,"x":280,"y":40,"wires":[[]],"icon":"node-red/cog.png"},{"id":"f4f91802.bc9698","type":"join","z":"9a2110eb.26904","name":"Combine Payloads","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":430,"y":380,"wires":[["11867eed.7ae251"]],"icon":"node-red/template.png"},{"id":"c00c5d5d.22f0b","type":"function","z":"9a2110eb.26904","name":"Objectify","func":"const uuid = msg.payload;\nmsg.payload = {\"uuid\": uuid};\n\nreturn msg;","outputs":1,"noerr":0,"x":200,"y":300,"wires":[["77f40d43.7c2444"]]},{"id":"77f40d43.7c2444","type":"join","z":"9a2110eb.26904","name":"Add UUID to payloads","mode":"custom","build":"merged","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":420,"y":280,"wires":[["943bcc9b.6abc4"]],"icon":"node-red/template.png"},{"id":"11867eed.7ae251","type":"mqtt out","z":"9a2110eb.26904","name":"Topic: tgDeviceData","topic":"tgDeviceData","qos":"0","retain":"true","broker":"67ca144a.4bd7cc","x":760,"y":280,"wires":[]},{"id":"715b3ef4.5f552","type":"comment","z":"9a2110eb.26904","name":"<- Add new devices here","info":"","x":490,"y":40,"wires":[]},{"id":"943bcc9b.6abc4","type":"function","z":"9a2110eb.26904","name":"Create Random Data","func":"return context.flow.get('createPayload')(msg);","outputs":1,"noerr":0,"x":200,"y":380,"wires":[["f4f91802.bc9698"]]},{"id":"5d72b154.3cd28","type":"inject","z":"9a2110eb.26904","name":"Init","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":"0","x":110,"y":80,"wires":[["1ef52fa6.790a1","c9c27924.2be8c8","f10dc65d.d19cb8"]]},{"id":"c9c27924.2be8c8","type":"function","z":"9a2110eb.26904","name":"Define Unit Ranges","func":"context.flow.set(\"unitRanges\", {\n    \"fahrenheit\": [-100,200],\n    \"percent\": [0,100],\n    \"kPa\": [0,30000],\n    \"psi\": [0,4000]\n})","outputs":1,"noerr":0,"x":290,"y":80,"wires":[[]],"icon":"node-red/cog.png"},{"id":"4eb5ebe7.cce4a4","type":"function","z":"9a2110eb.26904","name":"Get Devices","func":"msg.payload = context.flow.get(\"devices\");\n\ncontext.flow.set(\"index\",0)\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":200,"wires":[["2d5c6246.35270e"]]},{"id":"f10dc65d.d19cb8","type":"function","z":"9a2110eb.26904","name":"Define Data Functions","func":"function createRandomData(unitType,previousData){\n    const unitRange = context.flow.get(\"unitRanges\")[unitType]\n    const max = unitRange[1]\n    const min = unitRange[0]\n    if(!previousData){\n        return randomFloat(max,min,digits=2)\n    }\n    else{\n        return roundTo(previousData + randomFloat(max * 0.02,0,digits=2) * ((Math.round(Math.random()) ? 1:-1)),2)\n    }\n}\n\nfunction randomFloat(max,min){\n    return roundTo((Math.random() * (max - min) + min),2)\n}\n\nfunction roundTo(n, digits) {\n    return Math.round(n * 100) / 100\n}\n\nfunction createPayload(msg){\n    const timeStamp = Date.now()\n    const dateObj= new Date()\n    \n    const id = msg.payload.uuid\n    const deviceType = msg.payload.deviceType\n    const deviceName = msg.payload.deviceName\n    const units = msg.payload.units\n    const company = context.flow.get('company')\n    const coord = {\n        lat: msg.payload.lat,\n        lng: msg.payload.lng\n    }\n    \n    const index = context.flow.get('index')\n    \n    const previousData = context.flow.get('previousData')\n    const randomData = createRandomData(units,previousData[index])\n    previousData[index] = randomData\n    context.flow.set('previousData',previousData)\n    \n    context.flow.set('index',index + 1)\n    \n    msg.payload = \n        {\n           id,\n           timeStamp,\n           coord,\n           company,\n           deviceType,\n           units,\n           \"value\": randomData\n        }\n    \n    msg.topic = deviceName\n\n    if(index + 1 == context.flow.get('numDevices')){\n        msg.complete = true\n    }\n    \n    return msg\n}\n\ncontext.flow.set('createPayload',createPayload)","outputs":1,"noerr":0,"x":300,"y":120,"wires":[[]],"icon":"node-red/light.png"},{"id":"e60c730d.025af","type":"function","z":"9a2110eb.26904","name":"Log Payload","func":"node.log(JSON.stringify(msg.payload))\nreturn msg;","outputs":1,"noerr":0,"x":750,"y":360,"wires":[[]],"icon":"node-red/parser-json.png"}]
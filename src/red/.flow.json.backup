[
  {
      "id": "9a2110eb.26904",
      "type": "tab",
      "label": "Flow 1",
      "disabled": false,
      "info": ""
  },
  {
      "id": "9f849a4b.3fea68",
      "type": "inject",
      "z": "9a2110eb.26904",
      "name": "Trigger",
      "topic": "",
      "payload": "",
      "payloadType": "num",
      "repeat": "5",
      "crontab": "",
      "once": false,
      "onceDelay": "",
      "x": 140,
      "y": 200,
      "wires": [
          [
              "b7458af9.8ef988",
              "e1bb2840.b9bd28",
              "638b2524.a75b2c"
          ]
      ]
  },
  {
      "id": "38e46d3d.5656d2",
      "type": "function",
      "z": "9a2110eb.26904",
      "name": "dummy-temp-1",
      "func": "const lat = [ 29.42, 30.26, 32.77, 36.37, 38.62, 39.09, 41.87, 43.03, 44.97, 41.25];\nconst lon = [-98.49,-97.74,-96.79,-94.20,-90.19,-94.57,-87.62,-87.90,-93.26,-95.99];\nconst randomTemp = parseFloat((Math.random() * (30 - (-30)) + (-30)).toFixed(1));  //random temp from -30.0 to 30.0 degrees\n\nconst timeStamp = Date.now();\nconst dateObj= new Date();\nconst timeString = dateObj.toLocaleString();\n\nconst uuid = msg.payload\n\nlet idx = context.get('count') || 0;\n\nif( idx > 9 )\n{\n    idx = 0;  \n}\ncontext.set('count',idx+1); //store next idx for later\n\nmsg.payload = \n            {\n               \"id\" : uuid,\n               \"timeStamp\" : timeStamp,\n               \"timeString\": timeString,\n                \"coord\" : \n                {\n                    \"lat\" : lat[idx],\n                    \"lon\" : lon[idx]\n                },\n                \"company\" : \"Acme Corp\",\n                \"avgTemp\" : randomTemp\n            };\n\nmsg.topic = node.name;\n\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 620,
      "y": 160,
      "wires": [
          [
              "be04db7e.e82c88"
          ]
      ]
  },
  {
      "id": "86bc8c7c.b2e1b",
      "type": "comment",
      "z": "9a2110eb.26904",
      "name": "Trigger Flow at Interval",
      "info": "",
      "x": 120,
      "y": 120,
      "wires": []
  },
  {
      "id": "2241b06a.09665",
      "type": "comment",
      "z": "9a2110eb.26904",
      "name": "Generate JSON Payload",
      "info": "",
      "x": 610,
      "y": 120,
      "wires": []
  },
  {
      "id": "6776db87.aff4e4",
      "type": "comment",
      "z": "9a2110eb.26904",
      "name": "Publish to Local Mosquitto at port 1883",
      "info": "",
      "x": 970,
      "y": 160,
      "wires": []
  },
  {
      "id": "ba42db2c.7b46f8",
      "type": "function",
      "z": "9a2110eb.26904",
      "name": "dummy-temp-2",
      "func": "const lat = [ 29.42, 30.26, 32.77, 36.37, 38.62, 39.09, 41.87, 43.03, 44.97, 41.25];\nconst lon = [-98.49,-97.74,-96.79,-94.20,-90.19,-94.57,-87.62,-87.90,-93.26,-95.99];\nconst randomTemp = parseFloat((Math.random() * (30 - (-30)) + (-30)).toFixed(1));  //random temp from -30.0 to 30.0 degrees\n\nconst timeStamp = Date.now();\nconst dateObj= new Date();\nconst timeString = dateObj.toLocaleString();\n\nconst uuid = msg.payload\n\nlet idx = context.get('count') || 0;\n\nif( idx > 9 )\n{\n    idx = 0;  \n}\ncontext.set('count',idx+1); //store next idx for later\n\nmsg.payload = \n            {\n               \"id\" : uuid,\n               \"timeStamp\" : timeStamp,\n               \"timeString\": timeString,\n                \"coord\" : \n                {\n                    \"lat\" : lat[idx],\n                    \"lon\" : lon[idx]\n                },\n                \"company\" : \"Acme Corp\",\n                \"avgTemp\" : randomTemp\n            };\n\nmsg.topic = node.name;\n\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 620,
      "y": 200,
      "wires": [
          [
              "be04db7e.e82c88"
          ]
      ]
  },
  {
      "id": "b6a8e921.6bc328",
      "type": "function",
      "z": "9a2110eb.26904",
      "name": "dummy-temp-3",
      "func": "const lat = [ 29.42, 30.26, 32.77, 36.37, 38.62, 39.09, 41.87, 43.03, 44.97, 41.25];\nconst lon = [-98.49,-97.74,-96.79,-94.20,-90.19,-94.57,-87.62,-87.90,-93.26,-95.99];\nconst randomTemp = parseFloat((Math.random() * (30 - (-30)) + (-30)).toFixed(1));  //random temp from -30.0 to 30.0 degrees\n\nconst timeStamp = Date.now();\nconst dateObj= new Date();\nconst timeString = dateObj.toLocaleString();\n\nconst uuid = msg.payload\n\nlet idx = context.get('count') || 0;\n\nif( idx > 9 )\n{\n    idx = 0;  \n}\ncontext.set('count',idx+1); //store next idx for later\n\nmsg.payload = \n            {\n               \"id\" : uuid,\n               \"timeStamp\" : timeStamp,\n               \"timeString\": timeString,\n                \"coord\" : \n                {\n                    \"lat\" : lat[idx],\n                    \"lon\" : lon[idx]\n                },\n                \"company\" : \"Acme Corp\",\n                \"avgTemp\" : randomTemp\n            };\n\nmsg.topic = node.name;\n\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 620,
      "y": 240,
      "wires": [
          [
              "ee70dabb.95c738"
          ]
      ]
  },
  {
      "id": "be04db7e.e82c88",
      "type": "join",
      "z": "9a2110eb.26904",
      "name": "",
      "mode": "custom",
      "build": "object",
      "property": "payload",
      "propertyType": "msg",
      "key": "topic",
      "joiner": "\\n",
      "joinerType": "str",
      "accumulate": false,
      "timeout": "",
      "count": "",
      "reduceRight": false,
      "reduceExp": "",
      "reduceInit": "",
      "reduceInitType": "",
      "reduceFixup": "",
      "x": 850,
      "y": 200,
      "wires": [
          [
              "714b645.f69a69c"
          ]
      ]
  },
  {
      "id": "714b645.f69a69c",
      "type": "mqtt out",
      "z": "9a2110eb.26904",
      "name": "Topic: tgDeviceData",
      "topic": "tgDeviceData",
      "qos": "0",
      "retain": "true",
      "broker": "67ca144a.4bd7cc",
      "x": 1040,
      "y": 200,
      "wires": []
  },
  {
      "id": "5e445cce.36a6a4",
      "type": "comment",
      "z": "9a2110eb.26904",
      "name": "Follow the name format (affects data payload)",
      "info": "",
      "x": 610,
      "y": 80,
      "wires": []
  },
  {
      "id": "b7458af9.8ef988",
      "type": "uuid",
      "z": "9a2110eb.26904",
      "uuidVersion": "v4",
      "namespaceType": "",
      "namespace": "",
      "namespaceCustom": "",
      "name": "",
      "field": "payload",
      "fieldType": "msg",
      "x": 450,
      "y": 160,
      "wires": [
          [
              "38e46d3d.5656d2"
          ]
      ]
  },
  {
      "id": "ee70dabb.95c738",
      "type": "function",
      "z": "9a2110eb.26904",
      "name": "Payload Complete",
      "func": "msg.complete = true\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 830,
      "y": 300,
      "wires": [
          [
              "be04db7e.e82c88"
          ]
      ]
  },
  {
      "id": "e1bb2840.b9bd28",
      "type": "uuid",
      "z": "9a2110eb.26904",
      "uuidVersion": "v4",
      "namespaceType": "",
      "namespace": "",
      "namespaceCustom": "",
      "name": "",
      "field": "payload",
      "fieldType": "msg",
      "x": 450,
      "y": 200,
      "wires": [
          [
              "ba42db2c.7b46f8"
          ]
      ]
  },
  {
      "id": "638b2524.a75b2c",
      "type": "uuid",
      "z": "9a2110eb.26904",
      "uuidVersion": "v4",
      "namespaceType": "",
      "namespace": "",
      "namespaceCustom": "",
      "name": "",
      "field": "payload",
      "fieldType": "msg",
      "x": 450,
      "y": 240,
      "wires": [
          [
              "b6a8e921.6bc328"
          ]
      ]
  },
  {
      "id": "67ca144a.4bd7cc",
      "type": "mqtt-broker",
      "z": "",
      "name": "",
      "broker": "mqtt://localhost:1883",
      "port": "1883",
      "clientid": "",
      "usetls": false,
      "compatmode": true,
      "keepalive": "60",
      "cleansession": true,
      "birthTopic": "",
      "birthQos": "0",
      "birthPayload": "",
      "closeTopic": "",
      "closeQos": "0",
      "closePayload": "",
      "willTopic": "",
      "willQos": "0",
      "willPayload": ""
  }
]